name: Django CI

on:
  push:
    branches: [ master, staging ]
  pull_request:
    branches: [ master, staging ]

jobs:
  linters:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: actions/setup-python@v4
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          python ./pip/pip-install.py --python=python --pip=pip
      - uses: pre-commit/action@v3.0.0

  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        # Docker Hub image
        image: postgres:12.13
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: aiarena
          POSTGRES_USER: aiarena
          POSTGRES_DATABASE: test_aiarena
          POSTGRES_ROOT_PASSWORD: aiarena
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    strategy:
      max-parallel: 4
      matrix:
        python-version: [ '3.10' ]

    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: shogo82148/actions-setup-redis@v1
        with:
          redis-version: '6.x'
      - run: redis-cli ping
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          python ./pip/pip-install.py --python=python --pip=pip
      - name: Grant aiarena user full access
        env:
          PORT: ${{ job.services.postgres.ports[5432] }}
        run: |
          PGPASSWORD="aiarena" psql -Uaiarena --host="127.0.0.1" --port "$PORT" -c "GRANT ALL PRIVILEGES ON DATABASE aiarena TO aiarena;";
      - name: Run Tests
        env:
          NOFAKE_REDIS: 1
        run: |
          python manage.py test --noinput
