# Generated by Django 2.1.7 on 2020-06-18 12:40

import private_storage.fields
from django.db import migrations, models

import aiarena.core.storage


class Migration(migrations.Migration):
    dependencies = [
        ('core', '0105_remove_season_replay_archive_zip'),
    ]

    operations = [
        migrations.CreateModel(
            name='RelativeResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField()),
                ('result',
                 models.CharField(choices=[('none', 'None'), ('win', 'Win'), ('loss', 'Loss'), ('tie', 'Tie')],
                                  max_length=32)),
                ('result_cause', models.CharField(
                    choices=[('game_rules', 'Game Rules'), ('crash', 'Crash'), ('timeout', 'Timeout'),
                             ('race_mismatch', 'Race Mismatch'), ('match_cancelled', 'Match Cancelled'),
                             ('initialization_failure', 'Initialization Failure'), ('error', 'Error')], max_length=32)),
                ('elo_change', models.SmallIntegerField()),
                ('avg_step_time', models.FloatField()),
                ('game_time_formatted', models.CharField(max_length=32)),
                ('game_steps', models.IntegerField()),
                ('replay_file', models.FileField(upload_to='')),
                ('match_log', private_storage.fields.PrivateFileField(
                    storage=aiarena.core.storage.OverwritePrivateStorage(base_url='/'), upload_to='')),
            ],
            options={
                'managed': False,
            },
        ),
        migrations.RunSQL("""
        drop view if exists core_relativeresult;
        create view core_relativeresult as
                           select cr.id as id,
                           me_mp.id as me_id,
                           cm.id as match_id,
                           cr.created as created,
                           opponent_mp.id as opponent_id,
                           me_mp.result as result,
                           me_mp.result_cause as result_cause,
                           me_mp.elo_change as elo_change,
                           me_mp.avg_step_time as avg_step_time,
                           DATE_FORMAT(SEC_TO_TIME(cr.game_steps/22.4), '%H:%i:%S') as game_time_formatted,
                           cr.game_steps as game_steps,
                                  cr.replay_file as replay_file,
                                  me_mp.match_log as match_log
                           from core_result cr
                           join core_match cm on cr.match_id = cm.id
                           join core_matchparticipation me_mp on cm.id = me_mp.match_id
                           join core_matchparticipation opponent_mp on cm.id = opponent_mp.match_id and me_mp.participant_number!=opponent_mp.participant_number
        """)
    ]
