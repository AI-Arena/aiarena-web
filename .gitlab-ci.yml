default:
  image: debian:latest

before_script:
  - apt-get update -qq
  - apt-get install -qq git unzip wget nodejs

deploy_staging:
  stage: deploy
  environment:
    name: staging
    url: https://staging.ai-arena.net
  script:
    - 'which ssh-agent || ( apt-get install -qq openssh-client )'
    - eval $(ssh-agent -s)
    - bash -c "ssh-add <(echo '$SSH_PRIVATE_KEY')"
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - ssh aiarena@staging.ai-arena.net -p 2281 "cd /home/aiarena/ai-arena/ && git checkout master && git pull origin master && git submodule update --init --recursive && source venv/bin/activate && python3 ./pip/pip-install.py && python3 manage.py collectstatic --noinput && /home/aiarena/cleardb.sh && python3 manage.py migrate && python3 manage.py purgesensitivedata && sudo apachectl graceful && exit"
  only:
    - master

deploy_production:
  stage: deploy
  environment:
    name: production
    url: https://aiarena.net
  when: manual
  script:
    - 'which ssh-agent || ( apt-get install -qq openssh-client )'
    - eval $(ssh-agent -s)
    - bash -c "ssh-add <(echo '$SSH_PRIVATE_KEY')"
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - ssh aiarena@aiarena.net -p 2280 "cd /home/aiarena/ai-arena/ && git checkout master && git pull origin master && git submodule update --init --recursive && source venv/bin/activate && python3 ./pip/pip-install.py && python3 manage.py collectstatic --noinput && python3 manage.py migrate && sudo apachectl graceful && exit"
  only:
    - master

test:
  stage: test
  variables:
    MYSQL_ROOT_PASSWORD: mysql
    GIT_DEPTH: 0

  cache:
    paths:
      - .cache/pip
      - aiarena_env/

  services:
    - mariadb:10.1.38

  script:
    - apt-get install -y -qq python3.7-mysqldb default-libmysqlclient-dev build-essential curl default-mysql-client
    - apt-get install -qq python3.7-dev && apt-get install -qq python3.7-distutils && apt-get install -qq python3.7-apt
    - git submodule update --init --recursive
    - curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
    - python3.7 get-pip.py
    - rm get-pip.py
    - pip3.7 install virtualenv
    - virtualenv aiarena_env
    - source aiarena_env/bin/activate
    - python3.7 ./pip/pip-install.py --pip pip3.7 --python python3.7
    - cp test/test_env.py aiarena/env.py
    - mysql --host=mariadb -u root -p"$MYSQL_ROOT_PASSWORD" -e "CREATE DATABASE aiarena"
    - mysql --host=mariadb -u root -p"$MYSQL_ROOT_PASSWORD" -e "CREATE USER aiarena IDENTIFIED BY 'aiarena';"
    - mysql --host=mariadb -u root -p"$MYSQL_ROOT_PASSWORD" -e "GRANT ALL PRIVILEGES ON aiarena.* TO aiarena WITH GRANT OPTION;"
    - mysql --host=mariadb -u root -p"$MYSQL_ROOT_PASSWORD" -e "GRANT ALL PRIVILEGES ON test_aiarena.* to aiarena WITH GRANT OPTION;"
#    - python3.7 manage.py collectstatic --noinput
    - python3.7 manage.py seed --migrate
    - python3.7 manage.py test --noinput
    - coverage xml -o coverage-reports/coverage-aiarena.xml

  only:
    - merge_requests
    - master
